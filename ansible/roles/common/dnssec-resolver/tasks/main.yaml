---
# DNSSEC validating resolver (Unbound).


# Unbound should not start with the default configuration.
- name: Prevent Unbound from starting on installation
  ansible.builtin.include_tasks: apt-systemd-noautostart/pre.yaml
  vars:
    mask_package_name: unbound
    mask_systemd_units:
      - unbound.service
      - unbound-resolvconf.service


- name: Install Unbound
  ansible.builtin.apt:
    name: unbound
    state: present


# `unbound` only "Recommends" this.
#  - We need it for the initial `root.key`.
#    - See `../files/unbound.conf#auto-trust-anchor-file`.
- name: Install dns-root-data
  ansible.builtin.apt:
    name: dns-root-data
    state: present


- name: Set up auxiliary configuration directory
  ansible.builtin.file:
    path: /etc/unbound/conf
    owner: root
    group: root
    mode: '0755'
    state: directory
    follow: no


- name: Configure private addresses
  ansible.builtin.copy:
    src: private-addresses.conf
    dest: /etc/unbound/conf/private-addresses.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - 'common/dnssec-resolver : Reload Unbound'


- name: Configure forward servers
  ansible.builtin.copy:
    src: forward-quad9.conf
    dest: /etc/unbound/conf/forward.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - 'common/dnssec-resolver : Reload Unbound'


- name: Configure Unbound
  ansible.builtin.copy:
    src: unbound.conf
    dest: /etc/unbound/unbound.conf
    owner: root
    group: root
    mode: '0644'

    # This does not work before Unbound's first run.
    #validate: "unbound-checkconf '%s'"
  notify:
    - 'common/dnssec-resolver : Reload Unbound'


# This is only needed for the next task.
#  - This directory would normally be created on the first start of Unbound.
- name: Create chroot directory
  ansible.builtin.file:
    path: /var/lib/unbound
    owner: root
    group: root
    mode: '0755'
    state: directory
    follow: no


- name: Create root key directory
  ansible.builtin.file:
    path: /var/lib/unbound/root_key
    owner: unbound
    group: unbound
    mode: '0755'
    state: directory
    follow: no


- name: Configure /etc/default/unbound
  ansible.builtin.copy:
    src: unbound.default
    dest: /etc/default/unbound
    owner: root
    group: root
    mode: '0644'
  notify:
    - 'common/dnssec-resolver : Restart Unbound'


- name: Configure systemd service
  ansible.builtin.copy:
    src: unbound.service
    dest: /etc/systemd/system/unbound.service
    owner: root
    group: root
    mode: '0644'

    # This fails due to the temporary file not ending in `.service`.
    #validate: "systemd-analyze verify '%s'"
  notify:
    - 'common/systemd : daemon-reload'
    - 'common/dnssec-resolver : Restart Unbound'


- name: Unmask Unbound systemd units
  ansible.builtin.include_tasks: apt-systemd-noautostart/post.yaml
  vars:
    mask_package_name: unbound
    mask_systemd_units:
      - unbound.service
      - unbound-resolvconf.service


- name: Start and enable Unbound
  ansible.builtin.service:
    name: unbound
    enabled: yes
    state: started


# Notes:
#  * This service, if active, might overwrite /etc/resolv.conf.
#  * It would only ever start if resolvconf were installed.
- name: Disable unbound-resolvconf.service
  ansible.builtin.systemd:
    name: unbound-resolvconf.service
    enabled: no
    state: stopped
...
