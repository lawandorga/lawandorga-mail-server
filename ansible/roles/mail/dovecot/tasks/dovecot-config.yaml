---
# Configuration files for Dovecot itself.

# Notes:
#  * The order of configuration file installation matters.
#    - For validation to succeed, `!include`-d configuration files must be
#      installed before the configuration files that include them.


- name: Create configuration directories
  ansible.builtin.file:
    path: '{{ item }}'
    owner: root
    group: root
    mode: '0755'
    state: directory
    follow: no
  loop: '{{ mail_dovecot_confdirs }}'


# Access.
#  - Dovecot's $default_internal_user (`dovecot`) needs read access.
#  - Restrict access mode.
#    - This should not be necessary.
#      - The file does not contain a (valid) password (hash), despite its name.
#    - This is to avoid future mistakes, where passwords are configured within
#      without restricting the mode here.
- name: Configure static accounts
  ansible.builtin.template:
    src: dovecot/auth-ext/static-users.passwd.j2
    dest: '{{ mail_dovecot_confdir_external }}/static-users.passwd'
    owner: dovecot
    group: dovecot
    mode: '0400'
  notify:
    - 'mail/dovecot : Reload Dovecot'


# These files contains the SQL password; thus, the access needs restricting.
- name: Configure SQL queries
  ansible.builtin.template:
    src: 'dovecot/auth-ext/{{ item }}.j2'
    dest: '{{ mail_dovecot_confdir_external }}/{{ item }}'
    owner: root
    group: root
    mode: '0600'
  loop:
    - sql-common.conf.ext
    - sql-adminauth.conf.ext
    - sql-groupauth.conf.ext
  notify:
    - 'mail/dovecot : Reload Dovecot'


# Notes:
#  * This basically is just meant to create an empty file.
#    * We use `ansible.builtin.lineinfile` with `create=true` in place of
#      `ansible.builtin.file` with `touch=true`, because the latter would
#      update the timestamp unconditionally.
#  * The idea is that for each (lmtp-specific) plugin PLUGIN we add a line
#    `mail_plugins = $mail_plugins PLUGIN`.
#    * We thereby implicitly inherit the global $mail_plugins setting.
#  * Alternatives:
#    * Configure all lmtp-specific plugins as
#      `mail_plugins = $mail_plugins PLUGIN_0 PLUGIN_1 ...`.
#      * For each lmtp-specific plugin, we'd modify that line using
#        `ansible.builtin.lineinfile` with a regex.
#        * The chosen solution is deemed simpler.
#      * This could also be achieved via `mail_plugins = < file`, where
#        `file` would need to contain a space separated list of the plugins.
#        * Note that `file` would not be allowed to contain '\n' (including at
#          the end).
#    * Create a small configuration file for each lmtp-specific plugin, and
#      wildcard-include these.
#  * The `mail_plugins` variable (within the lmtp context) should not be
#    updated anywhere else.
#    * On why, see
#      <https://doc.dovecot.org/configuration_manual/config_file/#variable-expansion>.
#
- name: Create lmtp $mail_plugins configuration file
  ansible.builtin.lineinfile:
    path: '{{ mail_dovecot_lmtp_mail_plugins_config_path }}'
    line: '# LMTP $mail_plugins configuration'      # Dummy line.
    create: true
    owner: root
    group: root
    mode: '0644'
    validate: "doveconf -nc '%s'"
  notify:
    - 'mail/dovecot : Reload Dovecot'


- name: Install basic to be included configuration files
  ansible.builtin.template:
    src: 'dovecot/base/{{ item }}.j2'
    dest: '{{ mail_dovecot_confdir_explicit_base }}/{{ item }}'
    owner: root
    group: root
    mode: '0644'
    validate: "doveconf -nc '%s'"
  loop:
    - services.conf
    - tls.conf
    - auth.conf
    - logging.conf
    - mail-storage.conf
    - mailboxes.conf
    - lmtp.conf
    - imap.conf
  notify:
    - 'mail/dovecot : Reload Dovecot'


- name: Install main Dovecot configuration file
  ansible.builtin.template:
    src: dovecot.conf.j2
    dest: /etc/dovecot/dovecot.conf
    owner: root
    group: root
    mode: '0644'
    validate: "doveconf -nc '%s'"
  notify:
    - 'mail/dovecot : Reload Dovecot'
...
